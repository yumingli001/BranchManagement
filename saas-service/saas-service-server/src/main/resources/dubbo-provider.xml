<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://code.alibabatech.com/schema/dubbo
         http://code.alibabatech.com/schema/dubbo/dubbo.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
">

    <!--扫描所有使用注解的类型 spring自动扫描就不用一个一个配置bean了 其他的xml文件也不需要配置这个了-->
    <context:component-scan base-package="com.yunlsp.saas.service.server.impl"/>

    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="${dubbo.application.name}">
        <dubbo:parameter key="qos.enable" value="false"/>
        <dubbo:parameter key="qos.port" value="33333"/>
        <dubbo:parameter key="qos.accept.foreign.ip" value="false"/>
    </dubbo:application>

    <dubbo:provider version="1.0.0" group="yunlsp.saas" timeout="3000"/>

    <!-- 使用zookper注册中心暴露服务地址 -->
    <dubbo:registry address="${dubbo.registry.address}"/>

    <!-- 用dubbo协议在20881端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="-1"/>

    <dubbo:service interface="com.yunlsp.saas.service.api.UserLoginService" ref="userLoginService"/>
    <dubbo:service interface="com.yunlsp.saas.service.api.UserInfoService" ref="userInfoService"/>
    <dubbo:service interface="com.yunlsp.saas.service.api.CompanyService" ref="companyService"/>

    <!-- spring thread pool executor -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 线程池维护线程的最少数量 -->
        <property name="corePoolSize" value="5"/>
        <!-- 允许的空闲时间 -->
        <property name="keepAliveSeconds" value="200"/>
        <!-- 线程池维护线程的最大数量 -->
        <property name="maxPoolSize" value="10"/>
        <!-- 缓存队列 -->
        <property name="queueCapacity" value="20"/>
        <!-- 对拒绝task的处理策略 -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy"/>
        </property>
    </bean>

</beans>